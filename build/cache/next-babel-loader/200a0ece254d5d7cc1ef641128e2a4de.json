{"ast":null,"code":"var _jsxFileName = \"/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/components/BagItem.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport del from '../public/delete.svg';\n\nconst BagItem = ({\n  item,\n  bag\n}) => {\n  const {\n    API_URL\n  } = process.env;\n  const {\n    removeItem,\n    changeQuantity\n  } = bag;\n  const {\n    0: fetchedItem,\n    1: setItem\n  } = useState([]);\n  useEffect(() => {\n    fetch(`${API_URL}/coffees/${item.id}`).then(res => setItem(res.json()));\n  }, []);\n\n  function handleChange(itemName, e) {\n    console.log(e.target.value);\n\n    if (e.target.value >= 0) {\n      changeQuantity(itemName, e.target.value);\n    }\n  }\n\n  return __jsx(\"li\", {\n    className: \"bagItem\",\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: \"photo\",\n    src: fetchedItem.image && fetchedItem.image.url,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, fetchedItem.name), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"$\", fetchedItem.price), __jsx(\"input\", {\n    type: \"number\",\n    value: item.quantity,\n    onChange: e => handleChange(fetchedItem.name, e),\n    min: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: () => removeItem(item.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: del,\n    alt: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), console.log(fetchedItem));\n};\n\nexport default observer(BagItem);","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/components/BagItem.js"],"names":["useEffect","useState","observer","del","BagItem","item","bag","API_URL","process","env","removeItem","changeQuantity","fetchedItem","setItem","fetch","id","then","res","json","handleChange","itemName","e","console","log","target","value","image","url","name","price","quantity"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAmB;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAcC,OAAO,CAACC,GAA5B;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAiCL,GAAvC;AAEA,QAAM;AAAA,OAACM,WAAD;AAAA,OAAcC;AAAd,MAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,KAAK,CAAE,GAAEP,OAAQ,YAAWF,IAAI,CAACU,EAAG,EAA/B,CAAL,CAAuCC,IAAvC,CAA4CC,GAAG,IAAIJ,OAAO,CAACI,GAAG,CAACC,IAAJ,EAAD,CAA1D;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,YAAT,CAAsBC,QAAtB,EAAgCC,CAAhC,EAAmC;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;;AACA,QAAIJ,CAAC,CAACG,MAAF,CAASC,KAAT,IAAkB,CAAtB,EAAyB;AACrBd,MAAAA,cAAc,CAACS,QAAD,EAAWC,CAAC,CAACG,MAAF,CAASC,KAApB,CAAd;AACH;AACJ;;AAED,SACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAwB,IAAA,GAAG,EAAEpB,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAEO,WAAW,CAACc,KAAZ,IAAqBd,WAAW,CAACc,KAAZ,CAAkBC,GAAnE;AAAwE,IAAA,GAAG,EAAC,EAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBf,WAAW,CAACgB,IAArC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQhB,WAAW,CAACiB,KAApB,CAHJ,EAII;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAExB,IAAI,CAACyB,QAFhB;AAGI,IAAA,QAAQ,EAAET,CAAC,IAAIF,YAAY,CAACP,WAAW,CAACgB,IAAb,EAAmBP,CAAnB,CAH/B;AAII,IAAA,GAAG,EAAC,GAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAWI;AAAQ,IAAA,OAAO,EAAE,MAAMX,UAAU,CAACL,IAAI,CAACuB,IAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEzB,GAAV;AAAe,IAAA,GAAG,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXJ,EAcKmB,OAAO,CAACC,GAAR,CAAYX,WAAZ,CAdL,CADJ;AAkBH,CAnCD;;AAqCA,eAAeV,QAAQ,CAACE,OAAD,CAAvB","sourcesContent":["import { useEffect, useState } from 'react'\nimport { observer } from 'mobx-react-lite'\n\nimport del from '../public/delete.svg'\n\nconst BagItem = ({ item, bag }) => {\n    const { API_URL } = process.env\n    const { removeItem, changeQuantity } = bag\n\n    const [fetchedItem, setItem] = useState([])\n\n    useEffect(() => {\n        fetch(`${API_URL}/coffees/${item.id}`).then(res => setItem(res.json()))\n    }, [])\n\n    function handleChange(itemName, e) {\n        console.log(e.target.value)\n        if (e.target.value >= 0) {\n            changeQuantity(itemName, e.target.value)\n        }\n    }\n\n    return (\n        <li className=\"bagItem\" key={item}>\n            <img className=\"photo\" src={fetchedItem.image && fetchedItem.image.url} alt=\"\" />\n            <span className=\"title\">{fetchedItem.name}</span>\n            <span>${fetchedItem.price}</span>\n            <input\n                type=\"number\"\n                value={item.quantity}\n                onChange={e => handleChange(fetchedItem.name, e)}\n                min=\"0\"\n            />\n            {/* <span>${(item.price * item.quantity).toFixed(2)}</span> */}\n            <button onClick={() => removeItem(item.name)}>\n                <img src={del} alt=\"delete\" />\n            </button>\n            {console.log(fetchedItem)}\n        </li>\n    )\n}\n\nexport default observer(BagItem)\n"]},"metadata":{},"sourceType":"module"}
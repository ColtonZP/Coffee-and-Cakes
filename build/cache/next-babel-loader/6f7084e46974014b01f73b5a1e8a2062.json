{"ast":null,"code":"var _jsxFileName = \"/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/components/BagItem.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport del from '../public/delete.svg';\n\nconst BagItem = ({\n  item,\n  bag\n}) => {\n  const {\n    API_URL\n  } = process.env;\n  const {\n    removeItem,\n    changeQuantity\n  } = bag;\n  const {\n    0: fetchedItem,\n    1: setItem\n  } = useState([]);\n  useEffect(() => {\n    fetchItem = async () => {\n      const res = await fetch(`${API_URL}/coffees/${item.id}`);\n      const json = await res.json();\n      setItem(json.data);\n    };\n\n    fetchItem();\n  }, []);\n\n  function handleChange(itemName, e) {\n    console.log(e.target.value);\n\n    if (e.target.value >= 0) {\n      changeQuantity(itemName, e.target.value);\n    }\n  }\n\n  return __jsx(\"li\", {\n    className: \"bagItem\",\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: \"photo\",\n    src: fetchedItem.image && fetchedItem.image.url,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, fetchedItem.name), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"$\", fetchedItem.price), __jsx(\"input\", {\n    type: \"number\",\n    value: item.quantity,\n    onChange: e => handleChange(fetchedItem.name, e),\n    min: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: () => removeItem(item.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: del,\n    alt: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), console.log(fetchedItem));\n};\n\nexport default observer(BagItem);\nexport async function getServerSideProps() {\n  const {\n    API_URL\n  } = process.env;\n  const res = await fetch(`${API_URL}/coffees`);\n  const coffee = await res.json();\n  return {\n    props: {\n      coffee\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/components/BagItem.js"],"names":["useEffect","useState","observer","del","BagItem","item","bag","API_URL","process","env","removeItem","changeQuantity","fetchedItem","setItem","fetchItem","res","fetch","id","json","data","handleChange","itemName","e","console","log","target","value","image","url","name","price","quantity","getServerSideProps","coffee","props"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAmB;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAcC,OAAO,CAACC,GAA5B;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAiCL,GAAvC;AAEA,QAAM;AAAA,OAACM,WAAD;AAAA,OAAcC;AAAd,MAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,SAAS,GAAG,YAAY;AACpB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,YAAWF,IAAI,CAACY,EAAG,EAA/B,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAJ,EAAnB;AACAL,MAAAA,OAAO,CAACK,IAAI,CAACC,IAAN,CAAP;AACH,KAJD;;AAKAL,IAAAA,SAAS;AACZ,GAPQ,EAON,EAPM,CAAT;;AASA,WAASM,YAAT,CAAsBC,QAAtB,EAAgCC,CAAhC,EAAmC;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;;AACA,QAAIJ,CAAC,CAACG,MAAF,CAASC,KAAT,IAAkB,CAAtB,EAAyB;AACrBf,MAAAA,cAAc,CAACU,QAAD,EAAWC,CAAC,CAACG,MAAF,CAASC,KAApB,CAAd;AACH;AACJ;;AAED,SACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAwB,IAAA,GAAG,EAAErB,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAEO,WAAW,CAACe,KAAZ,IAAqBf,WAAW,CAACe,KAAZ,CAAkBC,GAAnE;AAAwE,IAAA,GAAG,EAAC,EAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBhB,WAAW,CAACiB,IAArC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQjB,WAAW,CAACkB,KAApB,CAHJ,EAII;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAEzB,IAAI,CAAC0B,QAFhB;AAGI,IAAA,QAAQ,EAAET,CAAC,IAAIF,YAAY,CAACR,WAAW,CAACiB,IAAb,EAAmBP,CAAnB,CAH/B;AAII,IAAA,GAAG,EAAC,GAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAWI;AAAQ,IAAA,OAAO,EAAE,MAAMZ,UAAU,CAACL,IAAI,CAACwB,IAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAE1B,GAAV;AAAe,IAAA,GAAG,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXJ,EAcKoB,OAAO,CAACC,GAAR,CAAYZ,WAAZ,CAdL,CADJ;AAkBH,CAxCD;;AA0CA,eAAeV,QAAQ,CAACE,OAAD,CAAvB;AAEA,OAAO,eAAe4B,kBAAf,GAAoC;AACvC,QAAM;AAAEzB,IAAAA;AAAF,MAAcC,OAAO,CAACC,GAA5B;AACA,QAAMM,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,UAAZ,CAAvB;AACA,QAAM0B,MAAM,GAAG,MAAMlB,GAAG,CAACG,IAAJ,EAArB;AAEA,SAAO;AAAEgB,IAAAA,KAAK,EAAE;AAAED,MAAAA;AAAF;AAAT,GAAP;AACH","sourcesContent":["import { useEffect, useState } from 'react'\nimport { observer } from 'mobx-react-lite'\n\nimport del from '../public/delete.svg'\n\nconst BagItem = ({ item, bag }) => {\n    const { API_URL } = process.env\n    const { removeItem, changeQuantity } = bag\n\n    const [fetchedItem, setItem] = useState([])\n\n    useEffect(() => {\n        fetchItem = async () => {\n            const res = await fetch(`${API_URL}/coffees/${item.id}`)\n            const json = await res.json()\n            setItem(json.data)\n        }\n        fetchItem()\n    }, [])\n\n    function handleChange(itemName, e) {\n        console.log(e.target.value)\n        if (e.target.value >= 0) {\n            changeQuantity(itemName, e.target.value)\n        }\n    }\n\n    return (\n        <li className=\"bagItem\" key={item}>\n            <img className=\"photo\" src={fetchedItem.image && fetchedItem.image.url} alt=\"\" />\n            <span className=\"title\">{fetchedItem.name}</span>\n            <span>${fetchedItem.price}</span>\n            <input\n                type=\"number\"\n                value={item.quantity}\n                onChange={e => handleChange(fetchedItem.name, e)}\n                min=\"0\"\n            />\n            {/* <span>${(item.price * item.quantity).toFixed(2)}</span> */}\n            <button onClick={() => removeItem(item.name)}>\n                <img src={del} alt=\"delete\" />\n            </button>\n            {console.log(fetchedItem)}\n        </li>\n    )\n}\n\nexport default observer(BagItem)\n\nexport async function getServerSideProps() {\n    const { API_URL } = process.env\n    const res = await fetch(`${API_URL}/coffees`)\n    const coffee = await res.json()\n\n    return { props: { coffee } }\n}\n"]},"metadata":{},"sourceType":"module"}
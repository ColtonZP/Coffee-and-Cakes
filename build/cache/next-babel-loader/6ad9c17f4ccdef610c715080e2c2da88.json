{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { observable, makeObservable, action } from 'mobx';\n\nvar BagState = function BagState() {\n  var _this = this;\n\n  _classCallCheck(this, BagState);\n\n  _defineProperty(this, \"items\", []);\n\n  _defineProperty(this, \"addItem\", function (newItem) {\n    var exists = _this.items.some(function (item) {\n      return item.name === newItem.name;\n    }); // items.forEach(item => {\n    //     item.name === newItem.name\n    // });\n\n\n    if (exists) {}\n\n    _this.items = [].concat(_toConsumableArray(_this.items), [newItem]);\n  });\n\n  _defineProperty(this, \"removeItem\", function (itemName) {\n    _this.items = _this.items.filter(function (item) {\n      return item.name !== itemName;\n    });\n  });\n\n  makeObservable(this, {\n    items: observable,\n    addItem: action,\n    removeItem: action\n  });\n};\n\nexport default new BagState();","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/components/Bag.js"],"names":["observable","makeObservable","action","BagState","newItem","exists","items","some","item","name","itemName","filter","addItem","removeItem"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,cAArB,EAAqCC,MAArC,QAAmD,MAAnD;;IAEMC,Q,GAkBF,oBAAc;AAAA;;AAAA;;AAAA,iCAjBN,EAiBM;;AAAA,mCAfJ,UAAAC,OAAO,EAAI;AACjB,QAAMC,MAAM,GAAG,KAAI,CAACC,KAAL,CAAWC,IAAX,CAAgB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,KAAcL,OAAO,CAACK,IAA1B;AAAA,KAApB,CAAf,CADiB,CAEjB;AACA;AACA;;;AACA,QAAIJ,MAAJ,EAAY,CAEX;;AACD,IAAA,KAAI,CAACC,KAAL,gCAAiB,KAAI,CAACA,KAAtB,IAA6BF,OAA7B;AACH,GAMa;;AAAA,sCAJD,UAAAM,QAAQ,EAAI;AACrB,IAAA,KAAI,CAACJ,KAAL,GAAa,KAAI,CAACA,KAAL,CAAWK,MAAX,CAAkB,UAAAH,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,KAAcC,QAAlB;AAAA,KAAtB,CAAb;AACH,GAEa;;AACVT,EAAAA,cAAc,CAAC,IAAD,EAAO;AACjBK,IAAAA,KAAK,EAAEN,UADU;AAEjBY,IAAAA,OAAO,EAAEV,MAFQ;AAGjBW,IAAAA,UAAU,EAAEX;AAHK,GAAP,CAAd;AAKH,C;;AAGL,eAAe,IAAIC,QAAJ,EAAf","sourcesContent":["import { observable, makeObservable, action } from 'mobx'\n\nclass BagState {\n    items = []\n\n    addItem = newItem => {\n        const exists = this.items.some(item => item.name === newItem.name)\n        // items.forEach(item => {\n        //     item.name === newItem.name\n        // });\n        if (exists) {\n            \n        }\n        this.items = [...this.items, newItem]\n    }\n\n    removeItem = itemName => {\n        this.items = this.items.filter(item => item.name !== itemName)\n    }\n\n    constructor() {\n        makeObservable(this, {\n            items: observable,\n            addItem: action,\n            removeItem: action,\n        })\n    }\n}\n\nexport default new BagState()\n"]},"metadata":{},"sourceType":"module"}
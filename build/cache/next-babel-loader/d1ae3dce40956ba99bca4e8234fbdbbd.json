{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst {\n  observable\n} = require('mobx');\n\nclass BagState {\n  constructor() {\n    _defineProperty(this, \"items\", []);\n\n    makeObservable(this, {\n      items: observable\n    });\n  }\n\n  addItem() {\n    this.items.push({\n      name: 'item'\n    });\n  }\n\n}\n\nexport default new BagState();","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/components/Bag.js"],"names":["observable","require","BagState","constructor","makeObservable","items","addItem","push","name"],"mappings":";;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAiBC,OAAO,CAAC,MAAD,CAA9B;;AAEA,MAAMC,QAAN,CAAe;AAGXC,EAAAA,WAAW,GAAG;AAAA,mCAFN,EAEM;;AACVC,IAAAA,cAAc,CAAC,IAAD,EAAO;AACjBC,MAAAA,KAAK,EAAEL;AADU,KAAP,CAAd;AAGH;;AAEDM,EAAAA,OAAO,GAAG;AACN,SAAKD,KAAL,CAAWE,IAAX,CAAgB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAhB;AACH;;AAXU;;AAcf,eAAe,IAAIN,QAAJ,EAAf","sourcesContent":["const { observable } = require('mobx')\n\nclass BagState {\n    items = []\n\n    constructor() {\n        makeObservable(this, {\n            items: observable,\n        })\n    }\n\n    addItem() {\n        this.items.push({ name: 'item' })\n    }\n}\n\nexport default new BagState()"]},"metadata":{},"sourceType":"module"}
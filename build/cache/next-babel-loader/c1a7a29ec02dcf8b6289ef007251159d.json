{"ast":null,"code":"var _jsxFileName = \"/Users/colton/Documents/Projects/Web/GitHub/coffee/coffee-and-cakes/pages/drinks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport add from '../public/add.svg';\nexport var __N_SSP = true;\nexport default function Drinks(_ref) {\n  var _this = this;\n\n  var coffee = _ref.coffee;\n\n  var isNew = function isNew(date) {\n    var day = new Date(date);\n    day.setDate(day.getDate() + 30);\n    console.log(new date());\n    return day >= new Date();\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Drinks\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"Coffee\"), __jsx(\"div\", {\n    className: \"item-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, coffee.map(function (coffee) {\n    return __jsx(\"div\", {\n      className: \"item-card\",\n      key: coffee.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, coffee.name), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, coffee.description), __jsx(\"div\", {\n      className: \"nutrition\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    }, __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 37\n      }\n    }, \"Calories\"), \" \", coffee.calories), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }, __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 37\n      }\n    }, \"Caffeine\"), \" \", coffee.caffeine, \"mg\")), __jsx(\"span\", {\n      className: \"price\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, \"$\", coffee.price.toFixed(2)), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, isNew(coffee.published_at)), __jsx(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      src: add,\n      alt: \"add\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }), \" \", __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 61\n      }\n    }, \"Add\")));\n  }))));\n}\n_c = Drinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drinks\");","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/coffee/coffee-and-cakes/pages/drinks.js"],"names":["Head","add","Drinks","coffee","isNew","date","day","Date","setDate","getDate","console","log","map","name","description","calories","caffeine","price","toFixed","published_at"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,eAAe,SAASC,MAAT,OAA4B;AAAA;;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AAEvC,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AACpB,QAAMC,GAAG,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAZ;AACAC,IAAAA,GAAG,CAACE,OAAJ,CAAYF,GAAG,CAACG,OAAJ,KAAgB,EAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIN,IAAJ,EAAZ;AACA,WAAOC,GAAG,IAAI,IAAIC,IAAJ,EAAd;AACH,GALD;;AAOA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,MAAM,CAACS,GAAP,CAAW,UAACT,MAAD;AAAA,WACR;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,MAAM,CAACU,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,MAAM,CAACU,IAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIV,MAAM,CAACW,WAAX,CAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,OACqBX,MAAM,CAACY,QAD5B,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,OACqBZ,MAAM,CAACa,QAD5B,OAJJ,CAHJ,EAWI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA0Bb,MAAM,CAACc,KAAP,CAAaC,OAAb,CAAqB,CAArB,CAA1B,CAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOd,KAAK,CAACD,MAAM,CAACgB,YAAR,CAAZ,CAZJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAElB,GAAV;AAAe,MAAA,GAAG,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,OACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADhC,CAbJ,CADQ;AAAA,GAAX,CADL,CAFJ,CALJ,CADJ;AAgCH;KAzCuBC,M","sourcesContent":["import Head from 'next/head'\n\nimport add from '../public/add.svg'\n\nexport default function Drinks({ coffee }) {\n\n    const isNew = (date) => {\n        const day = new Date(date)\n        day.setDate(day.getDate() + 30)\n        console.log(new date)\n        return day >= new Date()\n    }\n\n    return (\n        <div className=\"container\">\n            <Head>\n                <title>Drinks</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n            </Head>\n            <main>\n                <h1>Coffee</h1>\n                <div className=\"item-grid\">\n                    {coffee.map((coffee) => (\n                        <div className=\"item-card\" key={coffee.name}>\n                            <h2>{coffee.name}</h2>\n                            <p>{coffee.description}</p>\n                            <div className=\"nutrition\">\n                                <span>\n                                    <b>Calories</b> {coffee.calories}\n                                </span>\n                                <span>\n                                    <b>Caffeine</b> {coffee.caffeine}mg\n                                </span>\n                            </div>\n                            <span className=\"price\">${coffee.price.toFixed(2)}</span>\n                            <span>{isNew(coffee.published_at)}</span>\n                            <button>\n                                <img src={add} alt=\"add\" /> <span>Add</span>\n                            </button>\n                        </div>\n                    ))}\n                </div>\n            </main>\n        </div>\n    )\n}\n\nexport async function getServerSideProps() {\n    const { API_URL } = process.env\n    const res = await fetch(`${API_URL}/coffees`)\n    const coffee = await res.json()\n\n    return { props: { coffee } }\n}\n"]},"metadata":{},"sourceType":"module"}
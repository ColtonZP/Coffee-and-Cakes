{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport { observer } from 'mobx-react-lite';\nimport add from '../public/add.svg';\nexport default function Drinks({\n  coffee,\n  bag\n}) {\n  const {\n    API_URL\n  } = process.env;\n  const {\n    addItem\n  } = bag;\n\n  const isBadge = coffee => {\n    const day = new Date(coffee.published_at);\n    day.setDate(day.getDate() + 30);\n\n    if (coffee.seasonal) {\n      return __jsx(\"span\", {\n        className: \"badge\"\n      }, \"Seasonal\");\n    } else if (day >= new Date()) {\n      return __jsx(\"span\", {\n        className: \"badge\"\n      }, \"New\");\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(Head, null, __jsx(\"title\", null, \"Drinks\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"main\", {\n    className: \"drinks\"\n  }, __jsx(\"h1\", null, \"Coffee\"), __jsx(\"div\", {\n    className: \"item-grid\"\n  }, coffee.map(coffee => __jsx(\"div\", {\n    className: \"item-card\",\n    key: coffee.name\n  }, __jsx(\"img\", {\n    className: \"photo\",\n    src: coffee.image && coffee.image.url,\n    alt: coffee.name\n  }), __jsx(\"h2\", null, isBadge(coffee), \" \", coffee.name), __jsx(\"p\", null, coffee.description), __jsx(\"div\", {\n    className: \"nutrition\"\n  }, __jsx(\"span\", null, __jsx(\"b\", null, \"Calories\"), \" \", coffee.calories), __jsx(\"span\", null, __jsx(\"b\", null, \"Caffeine\"), \" \", coffee.caffeine, \"mg\")), __jsx(\"span\", {\n    className: \"price\"\n  }, \"$\", coffee.price.toFixed(2)), __jsx(\"button\", {\n    onClick: () => addItem(coffee)\n  }, __jsx(\"img\", {\n    src: add,\n    alt: \"add\"\n  }), \" \", __jsx(\"span\", null, \"Add\")))))));\n}\nexport async function getServerSideProps() {\n  const {\n    API_URL\n  } = process.env;\n  const res = await fetch(`${API_URL}/coffees`);\n  const coffee = await res.json();\n  return {\n    props: {\n      coffee\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}
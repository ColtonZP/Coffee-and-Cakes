{"ast":null,"code":"var _jsxFileName = \"/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/pages/drinks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport { observer } from 'mobx-react-lite';\nimport add from '../public/add.svg';\n\nconst Drinks = ({\n  coffee,\n  bag\n}) => {\n  const {\n    API_URL\n  } = process.env;\n\n  const isBadge = coffee => {\n    const day = new Date(coffee.published_at);\n    day.setDate(day.getDate() + 30);\n\n    if (coffee.seasonal) {\n      return __jsx(\"span\", {\n        className: \"badge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 20\n        }\n      }, \"Seasonal\");\n    } else if (day >= new Date()) {\n      return __jsx(\"span\", {\n        className: \"badge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 20\n        }\n      }, \"New\");\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Drinks\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  })), __jsx(\"main\", {\n    className: \"drinks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Coffee\"), __jsx(\"div\", {\n    className: \"item-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, coffee.map(coffee => __jsx(\"div\", {\n    className: \"item-card\",\n    key: coffee.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, __jsx(\"img\", {\n    className: \"photo\",\n    src: coffee.image && coffee.image.url,\n    alt: coffee.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, isBadge(coffee), \" \", coffee.name), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, coffee.description), __jsx(\"div\", {\n    className: \"nutrition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }\n  }, \"Calories\"), \" \", coffee.calories), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }\n  }, \"Caffeine\"), \" \", coffee.caffeine, \"mg\")), __jsx(\"span\", {\n    className: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \"$\", coffee.price.toFixed(2)), __jsx(\"button\", {\n    onClick: () => addItem(coffee),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, __jsx(\"img\", {\n    src: add,\n    alt: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }), \" \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 61\n    }\n  }, \"Add\")))))));\n};\n\nexport default observer(Drinks);\nexport async function getServerSideProps() {\n  const {\n    API_URL\n  } = process.env;\n  const res = await fetch(`${API_URL}/coffees`);\n  const coffee = await res.json();\n  return {\n    props: {\n      coffee\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/pages/drinks.js"],"names":["Head","observer","add","Drinks","coffee","bag","API_URL","process","env","isBadge","day","Date","published_at","setDate","getDate","seasonal","map","name","image","url","description","calories","caffeine","price","toFixed","addItem","getServerSideProps","res","fetch","json","props"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport { observer } from 'mobx-react-lite'\n\nimport add from '../public/add.svg'\n\nconst Drinks = ({ coffee, bag }) => {\n    const { API_URL } = process.env\n\n    const isBadge = coffee => {\n        const day = new Date(coffee.published_at)\n        day.setDate(day.getDate() + 30)\n        if (coffee.seasonal) {\n            return <span className=\"badge\">Seasonal</span>\n        } else if (day >= new Date()) {\n            return <span className=\"badge\">New</span>\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <Head>\n                <title>Drinks</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n            </Head>\n            <main className=\"drinks\">\n                <h1>Coffee</h1>\n                <div className=\"item-grid\">\n                    {coffee.map(coffee => (\n                        <div className=\"item-card\" key={coffee.name}>\n                            <img\n                                className=\"photo\"\n                                src={coffee.image && coffee.image.url}\n                                alt={coffee.name}\n                            />\n                            <h2>\n                                {isBadge(coffee)} {coffee.name}\n                            </h2>\n                            <p>{coffee.description}</p>\n                            <div className=\"nutrition\">\n                                <span>\n                                    <b>Calories</b> {coffee.calories}\n                                </span>\n                                <span>\n                                    <b>Caffeine</b> {coffee.caffeine}mg\n                                </span>\n                            </div>\n                            <span className=\"price\">${coffee.price.toFixed(2)}</span>\n                            <button onClick={() => addItem(coffee)}>\n                                <img src={add} alt=\"add\" /> <span>Add</span>\n                            </button>\n                        </div>\n                    ))}\n                </div>\n            </main>\n        </div>\n    )\n}\n\nexport default observer(Drinks)\n\nexport async function getServerSideProps() {\n    const { API_URL } = process.env\n    const res = await fetch(`${API_URL}/coffees`)\n    const coffee = await res.json()\n\n    return { props: { coffee } }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/components/BagItem.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { observer } from 'mobx-react-lite';\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      bag = _ref.bag;\n  var removeItem = bag.removeItem,\n      changeQuantity = bag.changeQuantity;\n\n  function handleChange(itemName, e) {\n    if (e.target.value > -1) {\n      changeQuantity(itemName, e.target.value);\n    }\n\n    if (e.target.value === 0) {\n      console.log('it\\'s zero');\n    }\n  }\n\n  return __jsx(\"li\", {\n    className: \"bagItem\",\n    key: item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: item.image && item.image.url,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, item.name), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"$\", item.price, \" x\"), __jsx(\"input\", {\n    type: \"number\",\n    value: item.quantity,\n    onChange: function onChange(e) {\n      return handleChange(item.name, e);\n    },\n    min: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return removeItem(item.name);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"X\"));\n};\n\n_c = Item;\nexport default _c2 = observer(Item);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/components/BagItem.js"],"names":["useState","observer","Item","item","bag","removeItem","changeQuantity","handleChange","itemName","e","target","value","console","log","image","url","name","price","quantity"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAmB;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAAA,MACpBC,UADoB,GACWD,GADX,CACpBC,UADoB;AAAA,MACRC,cADQ,GACWF,GADX,CACRE,cADQ;;AAG5B,WAASC,YAAT,CAAsBC,QAAtB,EAAgCC,CAAhC,EAAmC;AAC/B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiB,CAAC,CAAtB,EAAyB;AACrBL,MAAAA,cAAc,CAACE,QAAD,EAAWC,CAAC,CAACC,MAAF,CAASC,KAApB,CAAd;AACH;;AACD,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,CAAvB,EAA0B;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;AACJ;;AAED,SACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAwB,IAAA,GAAG,EAAEV,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACW,KAAL,IAAcX,IAAI,CAACW,KAAL,CAAWC,GAAnC;AAAwC,IAAA,GAAG,EAAC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBZ,IAAI,CAACa,IAA9B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQb,IAAI,CAACc,KAAb,OAHJ,EAII;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAEd,IAAI,CAACe,QAFhB;AAGI,IAAA,QAAQ,EAAE,kBAAAT,CAAC;AAAA,aAAIF,YAAY,CAACJ,IAAI,CAACa,IAAN,EAAYP,CAAZ,CAAhB;AAAA,KAHf;AAII,IAAA,GAAG,EAAC,GAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAWI;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMJ,UAAU,CAACF,IAAI,CAACa,IAAN,CAAhB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAXJ,CADJ;AAeH,CA3BD;;KAAMd,I;AA6BN,qBAAeD,QAAQ,CAACC,IAAD,CAAvB","sourcesContent":["import { useState } from 'react'\nimport { observer } from 'mobx-react-lite'\n\nconst Item = ({ item, bag }) => {\n    const { removeItem, changeQuantity } = bag\n\n    function handleChange(itemName, e) {\n        if (e.target.value > -1) {\n            changeQuantity(itemName, e.target.value)\n        }\n        if (e.target.value === 0) {\n            console.log('it\\'s zero')\n        }\n    }\n\n    return (\n        <li className=\"bagItem\" key={item}>\n            <img src={item.image && item.image.url} alt=\"\" />\n            <span className=\"title\">{item.name}</span>\n            <span>${item.price} x</span>\n            <input\n                type=\"number\"\n                value={item.quantity}\n                onChange={e => handleChange(item.name, e)}\n                min=\"1\"\n            />\n            {/* <span>${(item.price * item.quantity).toFixed(2)}</span> */}\n            <button onClick={() => removeItem(item.name)}>X</button>\n        </li>\n    )\n}\n\nexport default observer(Item)\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { observable, makeObservable, action } from 'mobx';\n\nclass BagState {\n  constructor() {\n    _defineProperty(this, \"items\", []);\n\n    _defineProperty(this, \"addItem\", () => {\n      this.items.push({\n        name: 'item'\n      });\n    });\n  }\n\n}\n\nexport default new BagState();","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/components/Bag.js"],"names":["observable","makeObservable","action","BagState","items","push","name"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,cAArB,EAAqCC,MAArC,QAAmD,MAAnD;;AAEA,MAAMC,QAAN,CAAe;AAAA;AAAA,mCACH,EADG;;AAAA,qCAGD,MAAM;AACZ,WAAKC,KAAL,CAAWC,IAAX,CAAgB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAhB;AACH,KALU;AAAA;;AAAA;;AAUf,eAAe,IAAIH,QAAJ,EAAf","sourcesContent":["import { observable, makeObservable, action } from 'mobx'\n\nclass BagState {\n    items = []\n\n    addItem = () => {\n        this.items.push({ name: 'item' })\n    }\n\n    \n}\n\nexport default new BagState()\n"]},"metadata":{},"sourceType":"module"}
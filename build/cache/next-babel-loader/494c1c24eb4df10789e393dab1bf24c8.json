{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { observable, makeObservable, action } from 'mobx';\n\nfunction updatepirsist(items) {}\n\nclass BagState {\n  constructor() {\n    _defineProperty(this, \"items\", []);\n\n    _defineProperty(this, \"addItem\", newItem => {\n      const currentItem = this.items.find(item => item.name === newItem.name); // items.forEach(item => {\n      //     item.name === newItem.name\n      // });\n\n      if (currentItem) {\n        currentItem.quantity++;\n      } else {\n        newItem.quantity = 1;\n        this.items = [...this.items, newItem];\n      }\n\n      localStorage.setItem('inBag', JSON.stringify(this.items));\n      console.log(JSON.parse(localStorage.getItem('inBag')));\n    });\n\n    _defineProperty(this, \"removeItem\", itemName => {\n      this.items = this.items.filter(item => item.name !== itemName);\n    });\n\n    _defineProperty(this, \"changeQuantity\", (itemName, value) => {\n      const currentItem = this.items.find(item => item.name === itemName);\n      currentItem.quantity = value;\n    });\n\n    makeObservable(this, {\n      items: observable,\n      addItem: action,\n      removeItem: action,\n      changeQuantity: action\n    });\n  }\n\n}\n\nexport default new BagState();","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/lib/Bag.js"],"names":["observable","makeObservable","action","updatepirsist","items","BagState","constructor","newItem","currentItem","find","item","name","quantity","localStorage","setItem","JSON","stringify","console","log","parse","getItem","itemName","filter","value","addItem","removeItem","changeQuantity"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,cAArB,EAAqCC,MAArC,QAAmD,MAAnD;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B,CAE7B;;AAED,MAAMC,QAAN,CAAe;AA2BXC,EAAAA,WAAW,GAAG;AAAA,mCA1BN,EA0BM;;AAAA,qCAxBJC,OAAO,IAAI;AACjB,YAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcJ,OAAO,CAACI,IAA9C,CAApB,CADiB,CAEjB;AACA;AACA;;AACA,UAAIH,WAAJ,EAAiB;AACbA,QAAAA,WAAW,CAACI,QAAZ;AACH,OAFD,MAEO;AACHL,QAAAA,OAAO,CAACK,QAAR,GAAmB,CAAnB;AACA,aAAKR,KAAL,GAAa,CAAC,GAAG,KAAKA,KAAT,EAAgBG,OAAhB,CAAb;AACH;;AACDM,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,KAAKZ,KAApB,CAA9B;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACH,KAWa;;AAAA,wCATDC,QAAQ,IAAI;AACrB,WAAKjB,KAAL,GAAa,KAAKA,KAAL,CAAWkB,MAAX,CAAkBZ,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcU,QAAxC,CAAb;AACH,KAOa;;AAAA,4CALG,CAACA,QAAD,EAAWE,KAAX,KAAqB;AAClC,YAAMf,WAAW,GAAG,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcU,QAAtC,CAApB;AACAb,MAAAA,WAAW,CAACI,QAAZ,GAAuBW,KAAvB;AACH,KAEa;;AACVtB,IAAAA,cAAc,CAAC,IAAD,EAAO;AACjBG,MAAAA,KAAK,EAAEJ,UADU;AAEjBwB,MAAAA,OAAO,EAAEtB,MAFQ;AAGjBuB,MAAAA,UAAU,EAAEvB,MAHK;AAIjBwB,MAAAA,cAAc,EAAExB;AAJC,KAAP,CAAd;AAMH;;AAlCU;;AAqCf,eAAe,IAAIG,QAAJ,EAAf","sourcesContent":["import { observable, makeObservable, action } from 'mobx'\n\nfunction updatepirsist(items) {\n\n}\n\nclass BagState {\n    items = []\n\n    addItem = newItem => {\n        const currentItem = this.items.find(item => item.name === newItem.name)\n        // items.forEach(item => {\n        //     item.name === newItem.name\n        // });\n        if (currentItem) {\n            currentItem.quantity++\n        } else {\n            newItem.quantity = 1\n            this.items = [...this.items, newItem]\n        }\n        localStorage.setItem('inBag', JSON.stringify(this.items))\n        console.log(JSON.parse(localStorage.getItem('inBag')))\n    }\n\n    removeItem = itemName => {\n        this.items = this.items.filter(item => item.name !== itemName)\n    }\n\n    changeQuantity = (itemName, value) => {\n        const currentItem = this.items.find(item => item.name === itemName)\n        currentItem.quantity = value\n    }\n\n    constructor() {\n        makeObservable(this, {\n            items: observable,\n            addItem: action,\n            removeItem: action,\n            changeQuantity: action,\n        })\n    }\n}\n\nexport default new BagState()\n"]},"metadata":{},"sourceType":"module"}
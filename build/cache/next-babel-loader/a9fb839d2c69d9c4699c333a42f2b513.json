{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { observable, makeObservable, action } from 'mobx';\n\nfunction updatepirsist(bag) {\n  localStorage.setItem('inBag', JSON.stringify(this.items));\n}\n\nclass BagState {\n  constructor() {\n    _defineProperty(this, \"items\", []);\n\n    _defineProperty(this, \"addItem\", newItem => {\n      const currentItem = this.items.find(item => item.name === newItem.name); // items.forEach(item => {\n      //     item.name === newItem.name\n      // });\n\n      if (currentItem) {\n        currentItem.quantity++;\n      } else {\n        newItem.quantity = 1;\n        this.items = [...this.items, newItem];\n      }\n\n      updatepirsist(this.items);\n      console.log();\n    });\n\n    _defineProperty(this, \"removeItem\", itemName => {\n      this.items = this.items.filter(item => item.name !== itemName);\n      updatepirsist(this.items);\n    });\n\n    _defineProperty(this, \"changeQuantity\", (itemName, value) => {\n      const currentItem = this.items.find(item => item.name === itemName);\n      currentItem.quantity = value;\n      updatepirsist(this.items);\n    });\n\n    makeObservable(this, {\n      items: observable,\n      addItem: action,\n      removeItem: action,\n      changeQuantity: action\n    });\n  }\n\n}\n\nexport default new BagState();","map":{"version":3,"sources":["/Users/colton/Documents/Projects/Web/GitHub/estores/coffee/coffee-and-cakes/lib/Bag.js"],"names":["observable","makeObservable","action","updatepirsist","bag","localStorage","setItem","JSON","stringify","items","BagState","constructor","newItem","currentItem","find","item","name","quantity","console","log","itemName","filter","value","addItem","removeItem","changeQuantity"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,cAArB,EAAqCC,MAArC,QAAmD,MAAnD;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACxBC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAApB,CAA9B;AACH;;AAED,MAAMC,QAAN,CAAe;AA6BXC,EAAAA,WAAW,GAAG;AAAA,mCA5BN,EA4BM;;AAAA,qCA1BJC,OAAO,IAAI;AACjB,YAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcJ,OAAO,CAACI,IAA9C,CAApB,CADiB,CAEjB;AACA;AACA;;AACA,UAAIH,WAAJ,EAAiB;AACbA,QAAAA,WAAW,CAACI,QAAZ;AACH,OAFD,MAEO;AACHL,QAAAA,OAAO,CAACK,QAAR,GAAmB,CAAnB;AACA,aAAKR,KAAL,GAAa,CAAC,GAAG,KAAKA,KAAT,EAAgBG,OAAhB,CAAb;AACH;;AACDT,MAAAA,aAAa,CAAC,KAAKM,KAAN,CAAb;AACAS,MAAAA,OAAO,CAACC,GAAR;AACH,KAaa;;AAAA,wCAXDC,QAAQ,IAAI;AACrB,WAAKX,KAAL,GAAa,KAAKA,KAAL,CAAWY,MAAX,CAAkBN,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcI,QAAxC,CAAb;AACAjB,MAAAA,aAAa,CAAC,KAAKM,KAAN,CAAb;AACH,KAQa;;AAAA,4CANG,CAACW,QAAD,EAAWE,KAAX,KAAqB;AAClC,YAAMT,WAAW,GAAG,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAcI,QAAtC,CAApB;AACAP,MAAAA,WAAW,CAACI,QAAZ,GAAuBK,KAAvB;AACAnB,MAAAA,aAAa,CAAC,KAAKM,KAAN,CAAb;AACH,KAEa;;AACVR,IAAAA,cAAc,CAAC,IAAD,EAAO;AACjBQ,MAAAA,KAAK,EAAET,UADU;AAEjBuB,MAAAA,OAAO,EAAErB,MAFQ;AAGjBsB,MAAAA,UAAU,EAAEtB,MAHK;AAIjBuB,MAAAA,cAAc,EAAEvB;AAJC,KAAP,CAAd;AAMH;;AApCU;;AAuCf,eAAe,IAAIQ,QAAJ,EAAf","sourcesContent":["import { observable, makeObservable, action } from 'mobx'\n\nfunction updatepirsist(bag) {\n    localStorage.setItem('inBag', JSON.stringify(this.items))\n}\n\nclass BagState {\n    items = []\n\n    addItem = newItem => {\n        const currentItem = this.items.find(item => item.name === newItem.name)\n        // items.forEach(item => {\n        //     item.name === newItem.name\n        // });\n        if (currentItem) {\n            currentItem.quantity++\n        } else {\n            newItem.quantity = 1\n            this.items = [...this.items, newItem]\n        }\n        updatepirsist(this.items)\n        console.log()\n    }\n\n    removeItem = itemName => {\n        this.items = this.items.filter(item => item.name !== itemName)\n        updatepirsist(this.items)\n    }\n\n    changeQuantity = (itemName, value) => {\n        const currentItem = this.items.find(item => item.name === itemName)\n        currentItem.quantity = value\n        updatepirsist(this.items)\n    }\n\n    constructor() {\n        makeObservable(this, {\n            items: observable,\n            addItem: action,\n            removeItem: action,\n            changeQuantity: action,\n        })\n    }\n}\n\nexport default new BagState()\n"]},"metadata":{},"sourceType":"module"}